<?xml version="1.0" encoding="UTF-8"?>
<chapter
  version="5.0"
  xml:id="hbase_apis"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:svg="http://www.w3.org/2000/svg"
  xmlns:m="http://www.w3.org/1998/Math/MathML"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns:db="http://docbook.org/ns/docbook">
  <!--
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
  <title>Apache HBase APIs</title>
  <para>
      本章提供有关使用HBase的原生API进行操作的信息。这些信息并不详尽，并提供了除了<link
          xlink:href="http://hbase.apache.org/apidocs/index.html">User API Reference</link> 的快速参考。这里的实例是不全面或补完整的，并且仅仅用于说明目的。
  </para>
  <para>
      还可以使用多个其他的外部API来操作Apache HBase。请查看<xref linkend="external_apis" /> 了解更多信息。
      </para>

  <example>
    <title>使用Java创建一个表格</title>
    <para>这个例子在HBase 0.96.1.1上进行了测试。</para>
    <programlisting language="java">
package com.example.hbase.admin;

import java.io.IOException;

import org.apache.hadoop.hbase.HBaseConfiguration;
import org.apache.hadoop.hbase.HColumnDescriptor;
import org.apache.hadoop.hbase.HTableDescriptor;
import org.apache.hadoop.hbase.TableName;
import org.apache.hadoop.hbase.client.HBaseAdmin;
import org.apache.hadoop.hbase.io.compress.Compression.Algorithm;
import org.apache.hadoop.conf.Configuration;

import static com.example.hbase.Constants.*;

public class CreateSchema {

 public static void createOrOverwrite(HBaseAdmin admin, HTableDescriptor table) throws IOException {
    if (admin.tableExists(table.getName())) {
      admin.disableTable(table.getName());
      admin.deleteTable(table.getName());
    }
    admin.createTable(table);
  }

  public static void createSchemaTables (Configuration config) {
    try {
      final HBaseAdmin admin = new HBaseAdmin(config);
      HTableDescriptor table = new HTableDescriptor(TableName.valueOf(TABLE_NAME));
      table.addFamily(new HColumnDescriptor(CF_DEFAULT).setCompressionType(Algorithm.SNAPPY));

      System.out.print("Creating table. ");
      createOrOverwrite(admin, table);
      System.out.println(" Done.");

      admin.close();
    } catch (Exception e) {
      e.printStackTrace();
      System.exit(-1);
    }
  }


}      
      
    </programlisting>
  </example>
  <example>
    <title>增加、修改和删除一个表</title>
    <para>这个例子在HBase 0.96.1.1上进行了测试。</para>
    <programlisting language="java">
public static void upgradeFrom0 (Configuration config) {

    try {
      final HBaseAdmin admin = new HBaseAdmin(config);
      TableName tableName = TableName.valueOf(TABLE_ASSETMETA);
      HTableDescriptor table_assetmeta = new HTableDescriptor(tableName);
      table_assetmeta.addFamily(new HColumnDescriptor(CF_DEFAULT).setCompressionType(Algorithm.SNAPPY));

      // Create a new table.

      System.out.print("Creating table_assetmeta. ");
      admin.createTable(table_assetmeta);
      System.out.println(" Done.");

      // Update existing table
      HColumnDescriptor newColumn = new HColumnDescriptor("NEWCF");
      newColumn.setCompactionCompressionType(Algorithm.GZ);
      newColumn.setMaxVersions(HConstants.ALL_VERSIONS);
      admin.addColumn(tableName, newColumn);

      // Disable an existing table
      admin.disableTable(tableName);

      // Delete an existing column family
      admin.deleteColumn(tableName, CF_DEFAULT);

      // Delete a table (Need to be disabled first)
      admin.deleteTable(tableName);


      admin.close();
    } catch (Exception e) {
      e.printStackTrace();
      System.exit(-1);
    }
  }      
    </programlisting>
  </example>

</chapter>
