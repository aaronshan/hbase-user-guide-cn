<?xml version="1.0"?>
<chapter
        xml:id="community"
        version="5.0"
        xmlns="http://docbook.org/ns/docbook"
        xmlns:xlink="http://www.w3.org/1999/xlink"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:svg="http://www.w3.org/2000/svg"
        xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:html="http://www.w3.org/1999/xhtml"
        xmlns:db="http://docbook.org/ns/docbook">
    <!--
  /**
   * Licensed to the Apache Software Foundation (ASF) under one
   * or more contributor license agreements.  See the NOTICE file
   * distributed with this work for additional information
   * regarding copyright ownership.  The ASF licenses this file
   * to you under the Apache License, Version 2.0 (the
   * "License"); you may not use this file except in compliance
   * with the License.  You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  -->
    <title>社区</title>
    <section
            xml:id="decisions">
        <title>决策</title>
        <section
                xml:id="feature_branches">
            <title>特征分支</title>
            <para>特征分支很容易创建，你不需要是一个代码提交者，只需向开发者邮件列表，提供需要添加到JIRA的分支名称，就会有提交者帮你添加该分支.
                然后，你就可以提交各种发行文件到Apache HBase JIRA中，分支代码可以保存在任何地方，但应当是公开可见的，同时你可以通过开发者邮件列表更新进展。
                当特征准备好提交时，3+1为提交者将合并你的分支<footnote>
                    <para>见 <link
                            xlink:href="http://search-hadoop.com/m/asM982C5FkS1">HBase, mail # dev - Thoughts
                        about large feature dev branches</link></para>
                </footnote>
            </para>
        </section>
        <section
                xml:id="patchplusonepolicy">
            <title>补丁 +1 规则</title>
            <para> 以下规则是我们在09/2012制定的，只是一些建议并不是硬性规定。在它们固定下来前，我们想先试试看它们是否有效。 </para>
            <para> HBase由很多组件组成<link
                    xlink:href="https://issues.apache.org/jira/browse/HBASE#selectedTab=com.atlassian.jira.plugin.system.project%3Acomponents-panel"></link>。
                组件有一个或多个<xref
                        linkend="OWNER" />所有者。 <link
                        xlink:href="https://issues.apache.org/jira/browse/HBASE#selectedTab=com.atlassian.jira.plugin.system.project%3Acomponents-panel">组件</link>
                JIRA 页面的‘Description’字段描述了组件的当前所有者。 </para>
            <para> 提交补丁至少需要一个其适用的HBase组件所有者+1，如果所有者不在（太忙或其他原因），两个以上的非所有者+1也可以。 </para>
            <para> 跨组件补丁提交时，至少需要两个+1, preferably +1s by owners of components touched by the x-component patch
                (TODO: 这一点还需加强，但我认为对于首次提交来说这也可以）。
            </para>
            <para>任何人反对这个补丁将-1，只有当所有-1被处理后补丁才能提交。 </para>
        </section>
        <section
                xml:id="hbase.fix.version.in.JIRA">
            <title>对于解决的问题，怎样在JIRA中设置修复版本号</title>
            <para>当我们解决问题时，我们一致认为应该<link
                    xlink:href="http://search-hadoop.com/m/azemIi5RCJ1">这样</link>设置JIRA中的版本。
                如果trunk是0.98.0： </para>
            <itemizedlist>
                <listitem>
                    <para> 只提交的trunk:标上0.98 </para>
                </listitem>
                <listitem>
                    <para> 提交到0.95和trunk : 标上0.98和0.95.x </para>
                </listitem>
                <listitem>
                    <para> 提交到0.94.x，0.95 和 trunk: 标上0.98, 0.95.x, 和 0.94.x </para>
                </listitem>
                <listitem>
                    <para> 提交到 89-fb: 标上 89-fb </para>
                </listitem>
                <listitem>
                    <para> 提交site的修复: 无版本 </para>
                </listitem>
            </itemizedlist>
        </section>
        <section
                xml:id="hbase.when.to.close.JIRA">
            <title>何时关闭一个RESOLVED JIRA</title>
            <para>我们 <link
                    xlink:href="http://search-hadoop.com/m/4cIKs1iwXMS1">认为</link>，对于那些罗列了多个修复版本的问题，
                在这些版本的发布版上都会关闭这个问题，该问题以后的更改必须出现在一个新的JIRA中。
            </para>
        </section>
        <section
                xml:id="no.permanent.state.in.zk">
            <title>ZooKeeper中只有瞬态！</title>
            <para> 我们应当能去除Zookeeper中的数据，且hbase应该会慢慢重建这些ZK内容。在这几部分，这是个老格言。我们刚刚才注意到它。
                另外，我们现在正在违背这个基本原则—— replication至少保持了ZooKeeper中的永久状态——但我们正在努力取消这个对黄金法则的破坏。
            </para>
        </section>
    </section>
    <section
            xml:id="community.roles">
        <title>社区角色</title>
        <section
                xml:id="OWNER">
            <title>组件所有者/助理</title>
            <para> 组件所有者在Apache HBase JIRA <link
                    xlink:href="https://issues.apache.org/jira/browse/HBASE#selectedTab=com.atlassian.jira.plugin.system.project%3Acomponents-panel">组件</link>
                页中的description字段中列出。
                所有者们之所以在 'Description'字段中列出而不是 'Component Lead'字段，是因为后者只允许列出一个所有者，而我们鼓励组件拥有多个所有者。

            </para>
            <para> 所有者或组件助理是一些志愿者，他们通常（也不一定）在所在的组件领域中是专家，对Apache HBase组件应该怎样发展可能会有相应的议程。
            </para>
            <orderedlist>
                <title>组件所有者责任</title>
                <listitem>
                    <para> 所有者需要测试检验他们的组件范围内的补丁。
                    </para>
                </listitem>
                <listitem>
                    <para> 如果适用，如果所有者有一个议程表，他们将会向着他们的组件的推进方向，发布目标或构想。
                    </para>
                </listitem>
            </orderedlist>
            <para> 如果你想成为一名组件所有者， 就写好dev列表，我们稍后会签署。所有者不需要是代码提交者。 </para>
        </section>
    </section>
    <section
            xml:id="hbase.commit.msg.format">
        <title>提交消息格式</title>
        <para>我们 <link
                xlink:href="http://search-hadoop.com/m/Gwxwl10cFHa1">认为</link>SVN提交消息格式如下所示：
            <programlisting>HBASE-xxxxx &lt;title>. (&lt;contributor>)</programlisting> 如果是contributor在提交，
            ,则不用 '(&lt;contributor>)'。 </para>
    </section>
</chapter>
